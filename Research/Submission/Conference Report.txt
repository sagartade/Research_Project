
Title: 
Can a hybrid of ANN-GARCH model provide a significant improvement in predicting the price volatility of the Ethereum?
======================================================
Abstract:

Ethereum the second most popular cryptocurrency next to Bitcoin has a market share of US $18 billion. Due to its huge market shares, Ethereum has gained attention from the investor community. With its unique ability to write smart contracts for blockchain technologies, it is very popular among the application developers community. Even after having a significantly large fan base, there is very little academic research being done on this cryptocurrency. This research paper aim towards finding out if the hybrid model consisting of ANN-GARCH can provide significant improvements in predicting the price volatility of such popular and volatile cryptocurrency. This research intends to contribute to a better understanding of the ability of the GJR-GARCH model to predict volatility with a rolling window approach. These results when fed to the LSTM model for training and closing the gap between the actual and forecasted volatility values of the GARCH model yield interesting results. After, many iterations and tuning of the GARCH and LSTM models, it was observed that the Root Mean Squared Error (RMSE) was significantly less in comparison with standalone GARCH model. When compared the RMSE with standalone LSTM model the difference observed was very insignificant. This means that the LSTM model is capable enough in predicting the volatility in the case of Ethereum. The question which remains after this research is what factors of GARCH models are preventing it from predicting the highly volatile asset and how it can be optimized for the same.

======================================================
Introduction:

Cryptocurrencies have started gaining huge popularity after the 2008 crisis. With more than US $180 billion being invested in the cryptocurrency markets it is becoming one of the major asset class. <<References 1>> Increase in popularity has attracted every individual's attention towards the cryptocurrency market. Stories of people becoming millionaires overnight are hyping up the interest of the investors and common people. The very high volatile and unregulated market of cryptocurrencies has enabled people in gaining huge profits in recent years. On the other hand, billions of dollars were lost due to the same characteristics causing huge risks to the investors and fund managers creating chaos. Thus various academicians and professionals are trying to solve the problem of predicting the volatility of such cryptocurrencies. Majority of the study is done across one cryptocurrency which is Bitcoin. Origin of Bitcoin was aimed towards overcoming the shortfalls and opaque systems of the traditional banking institutions. The underlying technology of Bitcoin which was termed as "Blockchain" had trust, privacy, transparency and integrity into it by design with the use of advanced maths and technology. Thus the underlying technology of Bitcoin was a great inspiration for other cryptocurrencies and Ethereum in particular.

Ethereum which is the second popular and second most traded cryptocurrency has a capitalization of US $18 billion. With similar underlying technology of blockchain, Ethereum is also used for developing applications based on blockchain technologies. Ethers can be traded for the computation power required to solve a complex math problem for verifying the result. Thus making it unique in itself. One can create its own blockchain application based on Ethereum blockchain thus allowing it to execute applications and transacting the payments. Keeping this unique feature of Ethereum in mind, it was necessary to have research with regards to the prediction of the volatility of this cryptocurrency. Hybridized model of Artificial Neural Network (ANN) and Generalized Autoregressive Conditional Heteroskedasticity (GARCH) was thought of to be best suited for this research. The ability of GARCH models to estimate the volatility of an asset is the central idea of using it. Whereas, ANN is used to detect and minimize the nonlinear effects of volatility. <<References 2>>

This led to the proposal of the research question of:
"Can a hybrid of ANN-GARCH model provide a significant improvement in predicting the price volatility of the Ethereum?" To answer this question, the following milestones were set as objectives.

1) To statistically validate if the Ethereum time series is competent for the use of a proposed hybrid model.
2) To implement a rolling window approach in predicting the volatility by using GARCH and ANN.
3) To compare the hybrid results with the traditional systems and highlight its significance.

<<Image1 Ethereum Price Chart>>

This research is done only on the basis of historical time series data without any consideration of external factors or news or change in governing policies by any influential countries. Any of the above-mentioned factors may imply in a sudden change of prices and volatilities which may be the limitation of this research. It is assumed that the current state of cryptocurrencies continue in the future as they are now. Moving forward with these assumptions, the next section of the report will include a brief review of the literature in the area of cryptocurrencies, volatility predictions using hybrid models and state of the art in the Ethereum price prediction. The proposed methodology to achieve the answers to the questions listed will be discussed after the review based on the literature. Next sections of this research paper will focus in detail on the implementation part following which will be a detailed discussion of the results obtained and how are they interpreted. Thus concluding this research and highlighting the possible future work which can add more value to the current research.

======================================================
Related Work:

Cryptocurrency market is very loosely regulated. It has been in existence a little over a decade. Hence there is very little literature surrounding it. Most of the academic literature which is available these days is surrounding the popular cryptocurrency Bitcoin. <<Reference15>> The research conducted around this space speaks about the how Bitcoin can be used for conducting illegal activities. Another research conducted by the researchers from China talk about the concerns of the capital movement towards cryptocurrencies from financial markets in China. <<Reference16>>

On the other hand academicians talk about how investing in Bitcoin or other cryptocurrencies can help making a investment portfolio stronger and how it has created new opportunities for investment. <<Reference17>> But the major limitation of their research is that it was conducted when the the prices were sky rocketing thus failing to detect and understand the negative shocks. To predict returns of Bitcoin by including it in portfolio of fiat currencies, one research uses the GARCH(1,1) and GARCH(1,2) <<Reference18>>. Though their results were interestingly stating the fact that Bitcoin forecasted better returns than the fiat currencies which they were compared across. 

Uniqueness of Ethereum as a cryptocurrency is discussed by Wang et.al (2019) in their research paper <<Reference14>. They highlight that the use of Ethereum for smart contracts have a sizable amount of funds and huge number of accounts for trading it in the market. They also state the fact that being a cryptocurrency, Ethereum has very similar characteristics as that of Bitcoin. 

To support the above research, white paper on Ethereum <<Reference19>> describes about how it is and updated version of other cryptocurrencies with unique features such as creating financial contracts. Being an open ended protocol, allowing people to develop applications and transacting the cryptocurrency for executing it is also possible. Taking all these factors into account, prices of Ethereum are not only based on economic factors alone thus making it hard to predict.

Since GARCH Models and its variations are good at predicting such kind of volatile assets, they were chosen for this research. One of the research papers have compared twelve GARCH models across four cryptocurrencies. They discovered that GJR-GARCH(1,1) and IGARCH(1,1) were the best models for majority of the cases. GARCH(1,1) was best fit for Ripple cryptocurrency. Best fitting models were discovered based on the AIC, BIC and Hannan Quinn Criterion. <<Reference20>> Lower the value of the criterion, better is the GARCH fitting likelihood. Surprising enough this research excluded the Ethereum from its cryptocurrencies invoking more curiosity for the research. This research helps in understanding that even after being under the umbrella, every cryptocurrency behaves differently.

Second part of research is to implement Artificial Neural Network (ANN) to reduce the error component from the obtained GARCH volatility. Similar kind of research is being around since more than a decade. First spotting of use of ANN for predicting the stock prices as in late 90's . It was carried out on stock price of IBM. The results obtained then were not that impressive, but it provided the required motivation for tuning the model to train and achieve the better results. <<Reference21>> Later research showed that combination of GARCH and Neural Network was way more capable of capturing the volatility accurately rather than GARCH alone. Thus motivating the research thereafter. <<Reference22>>

Research done on Istanbul Stock Exchange in the year 2009 was one of the greatest motivations for carrying out this research. Data of the ISE 100 Index for this research was considered from October 1987 to February 2008. This data was nonlinear in nature and also has asymmetric clustering of volatility. These characteristics are very much similar to that of Ethereum. After using plethora of models, the research concluded that the combination of APGARCH model with ANN turned out to be best.<<Reference23>>

The recent studies of 2018 proposed the use of Long Short Term Memory which is a type of Recurrent Neural Network for predicting the volatility of Bitcoin. Research used the similar kind of framework that is being proposed in this paper. Researchers used AR(2) model in association with LSTM. This research is very vital in terms to achieve our goals and objectives for the research.<<Research24>>

Interestingly a non peer reviewed source suggested that the use of LSTM on financial time series 


So it can be observed that as the time line shifts to more recent studies, it is found that the researchers are very keen and interested in opting for a hybrid model as of traditional models. As a result, hybrid model tends to provide the better results in terms of accuracy for predictions. Specially the ANN and its variation LSTM is being used to reduce the gap between the forecasted and actual values of Bitcoin and other highly volatile markets.

======================================================
Methodology

This research follows the CRoss Industry Standard Process for Data Mining which is known as CRISP-DM. It is an industry standard which helps to follow a particular order to achieve the project outcome in data analytics field systematically without missing or skipping any steps. <<References 3>>

1) Business Understanding:

As discussed in the above sections, Ethereum is a unique cryptocurrency in itself. Predicting its prices and volatility is a major challenge in the current time. As there is significantly little work done in predicting its prices it shall be very useful for the investors. Academicians could also know the effects of using a hybrid model for predictions of such highly volatile asset class and know if it is efficient as compared to the traditional data modeling techniques.

2) Data Understanding:

Time series dataset of Ethereum prices is used. This data is scraped from the CoinMarketCap. <<References 1>> Data was available from 07th August 2015. For this particular research last date considered was 27th July 2019. It consists of 1451 observations and 5 attributes namely Date, Open, High, Low, Close. Frequency of this data is daily. Prices mentioned are across US Dollars. Below is the decomposition summary image of the closing prices of Ethereum which is used for this research. It consists of observed, trend, seasonality and randomness in the time series. It suggests the time series had a upward trend till early 2018, thereafter its a declining trend. The randomness during the same time period is very high in this time series indicating sudden changes in he volatility. It also suggests that the time series does not follow any uniform trend and seasonality with it.

<<Image2 Decomposition>>

3) Data Preparation:

It is a vital step in this research. As the data obtained is scraped from online source <<References 1>>, it is raw data. So the next step is to convert this data into time series format for further use. Closing prices of this time series were then selected. A new column is then added to this time series. This new column has the calculated log values of the closing prices. Log values are fed to the models for training the model. Next column which is added to this time series has a difference between current and previous log price. This step was essential for deriving the standard deviation of the corresponding price. As the sliding window approach is adopted for this research, it is necessary to calculate the standard deviation of these lagged log values. Sliding window of 30 observations is decided for this research. Hence the next column which is being added to this time series dataset is of the sliding window standard deviations of the previous 30 observation. The final step in the data preparation is to calculate the volatility of the closing prices. Yang-Zhang estimator for calculating volatility is used as it is independent of the jumps and the drifts in the time series and is also has the assumption that the pricing is continuous which is true in case of Ethereum. Its maximum efficiency is 14 times better than that of close to close estimator. <<Reference 4>>

4) Modeling:

Before proceeding towards the modeling few tests are needed to be done on the volatility derived. These tests will give us the clear idea if the data obtained can be used for the statical modeling. In order to run the GARCH Model, following tests were essential.

The first test which is carried out on the Volatility is the Augmented Dickey Fuller (ADF) test. It is used for checking if the series is stationary or not. The null hypothesis for this test is that the series is not stationary and therefore consists of a presence of unit root. Whereas, the alternative hypothesis is that the series exhibits stationarity. The more the negative value higher is the chance of missing unit root. We can only proceed with this time series if is stationary. On applying this test it was found that the value is -4.2248 and the p-value is 0.01 thus rejecting the null hypothesis and stating that the time series may be stationary. <<Reference 5>>

To confirm the trend stationarity exists and support the ADF, Kwiatkowski-Phillips-Schmidt-Shin (KPSS) test is also used. As opposite to the ADF test, null hypothesis of KPSS states that the series is stationary with deterministic mean that is the series is trend stationary against the null hypothesis stating that the different type of stationarity exists in the time series. As the LM statistic is less than the critical value of 0.05 confidence of 0.463 and the p-value is less than 0.01 states that the null hypothesis is accepted and the series is stationary. <<Reference 6>>

Engle proposed Lagrange Multiplier test which is commonly termed as LM ARCH Test. This test involves fitting of a linear regression model for the squared residuals and then determining whether or not the fitted model is significant <<Reference 7>>. When tested for ARCH presence in Ethereum time series, the null hypothesis stating the absence of ARCH process is rejected. Thus accepting the alternative hypothesis of q degrees of freedom greater than the squared value of X from the distribution and stating the presence of ARCH effect in the time series. The ARCH model is suitable when the time series with error variance follows the autoregressive (AR) model. Similarly, when autoregressive moving average (ARMA) is considered for the error variance, it is then termed as generalized autoregressive conditional heteroskedasticity (GARCH) model. 

Figure below <<Image3>> shows the architectural design of the proposed research. Two main algorithms used here are GJR-GARCH(1,1) and LSTM.

<<Image3 Design1>> <<Reference 13>>

After testing for ARCH presence, moving forward is finding the best GARCH model for this time series. There are total of 11 generalized autoregressive conditional heteroskedasticity (GARCH) models. After, thorough analysis of these models, 3 models are shortlisted for this research. They are EGARCH, QGARCH and GJR-GARCH. Starting with EGARCH model, as GARCH models ignores the sign of the variance thus modeling only magnitude. EGARCH over comes this issue considering negative signs from standard deviation. EGARCH captures the negative shock from the previous time shock t-1 and have a stronger impact for current time t rather than positive shocks. <<Reference 8>> But as the actual time series consists both positive and negative shocks, hence this model was discarded. Second model chosen was QGARCH. Like EGARCH, Quadratic GARCH model can detect the asymmetric positive as well as negative shocks. Addition of the asymmetric term to the vanilla GARCH improved the model significantly. It uses time-varying conditional variances for doing it. <<Reference 9>> According to the paper,<<Reference 10>> GJR-GARCH is the modification of the GARCH-M model. Three main considerations of GJR-GARCH are the seasonal volatility pattern, different impact of positive and negative impact on conditional variance and better prediction of conditional variance. Thus this model is chose for this research as it covers variety of the conditions which a highly volatile time series such as Ethereum can posses. Detail and configuration of this model is discussed in the following section of design specification. 

Second tough choice is to select the appropriate artificial neural network model to reduce the error and train the model. As neural networks does not make any assumptions about the mapping function and promptly learn the linear and nonlinear relations between the data points. Neural networks are also very robust to the error from the input data regardless of the missing values of outliers or sudden changes <<Reference 11>>. By keeping these factors in mind, Multilayer perceptron which is a feed forward type of neural network was sought after. Such kind of neural network are capable in solving most of the classification and non linear types of problems. But, the problems regarding time dependence is its limitation. To overcome this problem, recurrent neural networks (RNN) is a better solution. Among all the RNN's Long Short Term Memory (LSTM) takes into consideration the previous lagged training data and trains the model accordingly. When learning a mapping function, LSTM handles the order from inputs to outputs. Mapping function of LSTM learns to map inputs to outputs over a time period. This capability of LSTM is very useful for this research as volatility of Ethereum is varying widely across the time period t. LSTM thus helps this research by minimizing the error between the predicted volatilities and actual volatilities by using fixed size time windows. <<Reference 12>>

======================================================
Implementation

GJR-GARCH(p,q) model is built where value of p=1 and q=1. Scaled volatility values are then passed through this model for fitting. To generate the rolling forecast volatility, alpha, beta, gamma and omega values obtained from the GJR-GARCH model fitting were required. These values were fetched from the summary of the fitting. Next step in implementation is to solve the GJR-GARCH for each available record and obtain its forecasted volatility base on its t-1 lagged value. GJR-GARCH model is denoted by the formula,

\begin {math} 
~\sigma _{t}^{2}=\omega+~\alpha ~\epsilon _{{t-1}}^{2}+~\beta ~\sigma _{{t-1}}^{2}+~\gamma ~\epsilon _{{t-1}}^{2}I_{{t-1}}
\end {math}

Where, 

\begin {math}
~\epsilon _{t}=~\sigma _{t}z_{t}
\end {math}
and 
\begin {math}
I_{{t-1}}=0
\end {math}

if,
\begin {math}
~\epsilon _{{t-1}}\geq 0
\end {math}

and 
\begin {math}
I_{{t-1}}=1
\end {math}
if
\begin {math}
~\epsilon _{{t-1}}<0
\end {math}

Thus forecasted GJR-GARCH values were plotted against the actual values for visual comparison. Below is the figure showing the forecasted volatility across the actual volatility of Ethereum.

<<Image4 GJR-GARCH_Forecast>> 

Next step involved in implementation phase is to create a training data set for LSTM model with 1121 observations, 1 input layer with 1 node and 1 output for it. That model is then fed to the LSTM with 4 layers, 10 nodes per layer and 0.1 dropout for each layer to regularize. 5th layer was the output layer with 1 node. RNN regressor of tensorflow is used for implementation with 100 epochs and 32 batch size. For dataset of 1421 records, 100 epochs seemed to be optimum based on trial and error. Figure below shows the visual representation of the actual vs predicted rolling LSTM volatility. This research is using "Adam" optimizer for stochastic gradient descent thus optimizing "mean squared error" as a loss function.

<<Image5 LSTM_Forecast>>

To reduce the error in the GJR-GARCH model forecasting, its volatility is fed to the LSTM model along with the normal volatility as a input. Hence the model have 2 input layers and 1 output layer while keeping rest of the parameters same. Moving forward to the next section which contains information about the evaluation of the results obtained.

======================================================
Evaluation


Even though we did not try to build a state of the art LSTM model, yet it is quite impressive, especially on the graphic. However, the graphic might be illusional because we had too many data points in it. That's why we should again measure the goodnes of the model and try to make it better with by combining the garch results.







                   Constant Mean - GJR-GARCH Model Results                    
==============================================================================
Dep. Variable:             Volatility   R-squared:                      -0.252
Mean Model:             Constant Mean   Adj. R-squared:                 -0.252
Vol Model:                  GJR-GARCH   Log-Likelihood:               -45.8285
Distribution:                  Normal   AIC:                           101.657
Method:            Maximum Likelihood   BIC:                           127.953
                                        No. Observations:                 1421
Date:                Sun, Aug 11 2019   Df Residuals:                     1416
Time:                        22:33:58   Df Model:                            5
                               Mean Model                               
========================================================================
                 coef    std err          t      P>|t|  95.0% Conf. Int.
------------------------------------------------------------------------
mu             0.8377  1.104e-02     75.857      0.000 [  0.816,  0.859]
                               Volatility Model                              
=============================================================================
                 coef    std err          t      P>|t|       95.0% Conf. Int.
-----------------------------------------------------------------------------
omega      6.4859e-04  2.170e-04      2.989  2.801e-03  [2.233e-04,1.074e-03]
alpha[1]       1.0000  2.817e-02     35.500 4.973e-276      [  0.945,  1.055]
gamma[1]   2.8570e-08  4.335e-02  6.590e-07      1.000 [-8.497e-02,8.497e-02]
beta[1]    2.3871e-15  1.923e-02  1.242e-13      1.000 [-3.769e-02,3.769e-02]
=============================================================================

======================================================
Conclusion and Future Work


======================================================
References

1) CoinMarketCap. (2019). Cryptocurrency Market Capitalizations | CoinMarketCap. [online] Available at: https://coinmarketcap.com/ [Accessed 13 Apr. 2019].

2) Kristjanpoller, W. and Minutolo, M. (2018). A hybrid volatility forecasting framework integrating GARCH, artificial neural network, technical analysis and principal components analysis. Expert Systems with Applications, 109, pp.1-11.

3) Wirth, R. and Hipp, J., 2000, April. CRISP-DM: Towards a standard process model for data mining. In Proceedings of the 4th international conference on the practical applications of knowledge discovery and data mining (pp. 29-39). Citeseer.

4) Yang Zang Estimator 
Yang, Dennis, and Qiang Zhang. "Drift-Independent Volatility Estimation Based on High, Low, Open, and Close Prices." The Journal of Business 73, no. 3 (2000): 477-92. doi:10.1086/209650.

5) Fuller, W.A., 2009. Introduction to statistical time series (Vol.
428). John Wiley & Sons.

6) Shin, Yongcheol, and Peter Schmidt. "The KPSS stationarity test as a unit root test." Economics Letters 38, no. 4 (1992): 387-392.

7) Engle, R.F., 1982. Autoregressive conditional heteroscedasticity with estimates of the variance of United Kingdom inflation. Econometrica: Journal of the Econometric Society, pp.987-1007.

8) Inequality Constraints in the Univariate GARCH Model

9) Quadratic ARCH Model, Sentana

10) On the Relation between the Expected Value and the Volatility of the Nominal Excess Return on Stocks
https://doi.org/10.1111/j.1540-6261.1993.tb05128.x

11) Forecasting of nonlinear time series using ANN
https://doi.org/10.1016/j.fcij.2017.05.001

12) Applying LSTM to Time Series Predictable through Time-Window Approaches
https://link.springer.com/chapter/10.1007/3-540-44668-0_93


13) https://playground.tensorflow.org/

14)Wang, X., Wu, H., Sun, W. and Zhao, Y. (2019). Towards
Generating Cost-Effective Test-Suite for Ethereum Smart
Contract. 2019 IEEE 26th International Conference on
Software Analysis, Evolution and Reengineering (SANER).

15) Böhme, R., Christin, N., Edelman, B. and Moore, T. (2015).
Bitcoin: Economics, Technology, and Governance. Journal of
Economic Perspectives, 29(2), pp.213-238.

16)  Ju, L., Lu, T. and Tu, Z. (2015). Capital Flight and Bitcoin
Regulation. International Review of Finance, 16(3), pp.445-
455.

17) Brière, M., Oosterlinck, K. and Szafarz, A. (2015). Virtual
currency, tangible return: Portfolio diversification with
bitcoin. Journal of Asset Management, 16(6), pp.365-373.

18)Bhattacharjee, S., 2016. A statistical analysis of bitcoin
transactions during 2012 to 2013 in terms of premier
currencies: Dollar, Euro and Rubles. Vidwat, 9(1), p.8.

19)Buterin, V., 2014. A next-generation smart contract and
decentralized application platform. white paper.

20)Chu, J., Chan, S., Nadarajah, S. and Osterrieder, J. (2017). GARCH Modelling of Cryptocurrencies. Journal of Risk and Financial Management, 10(4), p.17.

21) White, H., (1988). Economic prediction using neural networks: The case of IBM daily stock returns.

22) Kryzanowski, L., Galler, M. and Wright, D. (1993). Using Artificial Neural Networks to Pick Stocks. Financial Analysts Journal, 49(4), pp.21-27.

23)Bildirici, M. and Ersin, Ö.Ö., 2009. Improving forecasts of GARCH family models with the artificial neural networks: An application to the daily returns in Istanbul Stock Exchange. Expert Systems with Applications, 36(4), pp.7355-7362.

24)Wu, C., Lu, C., Ma, Y. and Lu, R. (2018). A New Forecasting Framework for Bitcoin Price with LSTM. 2018 IEEE International Conference on Data Mining Workshops
(ICDMW).

25) 

26)

27)

28)

29)

30) 



======================================================
